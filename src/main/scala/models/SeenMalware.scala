package models

case class SeenMalware(timestamp: Int,
                       processingTime: Int,
                       sessionID: String,
                       connectorGUID: String,
                       businessGUID: String,
                       sha256: String,
                       filename: String,
                       path: String,
                       disposition: Int) {

   override def toString() = {
     s"""
     |{
     | 'timestamp': $timestamp,
     | 'processingtime': $processingTime,
     | 'sessionID': '$sessionID',
     | 'connectorGUID': '$connectorGUID',
     | 'businessGUID': '$businessGUID',
     | 'sha256': '$sha256',
     | 'filename': '$filename',
     | 'path': '$path',
     | 'disposition': $disposition,
     |}
     """.stripMargin
   }
}

object SeenMalware {
  import play.api.libs.functional.syntax._
  import play.api.libs.json._

  implicit val seenMalwareReads: Reads[SeenMalware] = (
    (JsPath \ "ts").read[Int] and
    (JsPath \ "pt").read[Int] and
    (JsPath \ "si").read[String] and
    (JsPath \ "uu").read[String] and
    (JsPath \ "bg").read[String] and
    (JsPath \ "sha").read[String] and
    (JsPath \ "nm").read[String] and
    (JsPath \ "ph").read[String] and
    (JsPath \ "dp").read[Int]
  ) (SeenMalware.apply _)
}
